
worker_processes 2; # Nombre de processus sur serveur NGINX. Dépend du CPUs
error_log /var/log/nginx/error.log warn; # Endroit où on va enregistrer les erreurs
pid /tmp/nginx.pid; # Indique le fichier où le PID (Process ID) du processus principal de Nginx sera enregistré.
events {
  worker_connections 1024; # Définit le nombre maximum de connexions simultanées que chaque processus de travail peut gérer.
}
http {
  client_body_temp_path /tmp/client_temp; # Permet de définirà Nginx où stocker temporairement les corps des requêtes des clients qui sont plus grands qu'une certaine taille ou qui ne peuvent pas être traités en mémoire directement
  proxy_temp_path /tmp/proxy_temp_path; # Spécifie le répertoire où Nginx stocke temporairement les réponses des serveurs en amont (upstream) lorsque Nginx agit comme un proxy
  fastcgi_temp_path /tmp/fastcgi_temp; # Spécifie le répertoire où Nginx stocke temporairement les réponses des applications FastCG
  uwsgi_temp_path /tmp/uwsgi_temp; # Spécifie le répertoire où Nginx stocke temporairement les réponses des applications uWSGI.
  scgi_temp_path /tmp/scgi_temp; # Spécifie le répertoire où Nginx stocke temporairement les réponses des applications SCGI.
  include /etc/nginx/mime.types; # Inclut le fichier de types MIME, qui associe les extensions de fichier aux types de contenu.
  default_type application/octet-stream; # Définit le type de contenu par défaut pour les fichiers dont l'extension n'est pas reconnue.
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  sendfile on;
  keepalive_timeout 65;

  gzip on; # Active la compression gzip
  gzip_static on; # Permet de servir des fichiers précompressés avec l'extension .gz.
  gzip_vary on; # Ajoute l'en-tête "Vary: Accept-Encoding" pour indiquer aux caches que le contenu est disponible en versions compressées et non compressées.
  gzip_proxied no-cache no-store private expired auth; # Indique quand activer la compression pour les réponses envoyées par des serveurs en amont
  gzip_min_length 10240; # : Ne compresse que les réponses dont la taille est supérieure ou égale à 10240 octets
  gzip_types # Spécifie les types MIME à compresser
  application/javascript
  application/json
  font/woff2
  text/css
  text/plain;

  map $http_content_type $block_xml {
    default 0;
    "application/xml" 1;
  }

  server {
    listen 80;
    server_name localhost;

    if ($block_xml) {
      return 403;
    }

    location / {
      root /app;
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # Définit une page d'erreur personnalisée pour les codes d'erreur 500, 502, 503 et 504.
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }

    # Correspond aux fichiers .html et /sw.js (service worker) et définit des en-têtes de cache pour indiquer aux clients de ne pas mettre en cache ces fichiers.
    location ~* (\.html|\/sw\.js)$ {
      root /app;
      expires -1y; # Définit la durée de cache à -1 an (ne pas mettre en cache)
      add_header Pragma "no-cache";
      add_header Cache-Control "public";
    }

    # Correspond aux fichiers statiques comme .js, .css, images, etc., et définit des en-têtes de cache pour indiquer aux clients de mettre en cache ces fichiers pendant 1 an.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|json)$ {
      root /app;
      expires 1y;
      add_header Cache-Control "public, immutable";
    }
  }
}
